library(dplyr)
library(data.table)
library(Hmisc)
library(ivpack)
create_plot <- function(MC, AC, DC, poslab){
max_y = DC(0) + 1
plot(MC, ylim=c(0, max_y), xlim = c(0, 4), xlab = "Quantity", ylab = "Price",
lwd = 3, axes = FALSE, frame = TRUE)
plot(AC, add = TRUE, xlim = c(0,4), lty = 3, lwd = 3)
plot(DC, add = TRUE, xlim = c(0,4), lty = 1, lwd = 3, col = "grey")
eqm = uniroot(function(x) AC(x) - DC(x), c(0, 100))$root
if(eqm <= 4){
peqm = AC(eqm)
} else {
peqm = AC(4)
}
abline(v = eqm, col = "red")
abline(v = 4, col = "green")
abline(h=peqm, col = "red")
Axis(side = 1, at = eqm,  labels="Qeqm", col.axis="red")
Axis(side = 1, at = 4,  labels="Qmax", col.axis="green")
Axis(side = 2, at = peqm, labels = "Peqm", col.axis="red")
legend(poslab, legend=c("MC", "AC", "Demand"), lty = c(1, 3, 1),
col = c("black", "black", "grey"))
}
MC <- function(x) -x + 5
AC <- function(x) -1/2 * x + 5
DC <- function(x) -2 * x + 10
create_plot(MC, AC, DC, "topright")
DC <- function(x)  -2 * x + 12
create_plot(MC, AC, DC, "topright")
MC <- function(x) -x + 5
AC <- function(x) -1/2 * x + 5
DC <- function(x) -3/4 * x + 5
create_plot(MC, AC, DC, "bottomleft")
MC <- function(x) x + 1
AC <- function(x)  1/2 * x + 1
DC <- function(x) -1 * x + 6
create_plot(MC, AC, DC, "topleft")
eff = uniroot(function(x) MC(x) - DC(x), c(0, 100))$root
abline(v = eff, col = "blue")
Axis(side = 1, at = eff,  labels="Qeff", col.axis="blue")
# Expected cost of insurance
0.25 * 0.1 * 10000 + 0.25 * 0.05 * 10000 + 0.25 * 0.2 * 10000 + 0.25 * 0.1 * 10000
risks = c(0.1, 0.05, 0.2, 0.1)
values_insurance = lapply(risks, function(r) r * 10000 + 400)
values_insurance
# Expected cost of insurance for smokers
0.5 * 0.1 * 10000 + 0.5 * 0.2 * 10000
# Expected cost of insurance for non-smokers
0.5 * 0.05 * 10000 + 0.5 * 0.1 * 10000
# Expected cost of insuring smokers with bad history (dollars)
0.2 * 10000
# loading in data
dat <- read.csv("DataExercise_IV/pset_iv_data.csv")
# A. constructing log variables
dat$pay_log <- log(dat$pay)
dat$dSSI_log <- log(dat$dSSI)
dat$Pop_log <- log(dat$Pop)
dat$EarnPOW_log <- log(dat$EarnPOW)
# B. constructing log differences
setDT(dat)[, delta_pay_log := c(NA, diff(pay_log)), by = fips]
setDT(dat)[, delta_dSSI_log := c(NA, diff(dSSI_log)), by = fips]
setDT(dat)[, delta_Pop_log := c(NA, diff(Pop_log)), by = fips]
setDT(dat)[, delta_EarnPOW_log := c(NA, diff(EarnPOW_log)), by = fips]
# C. creating 1968 share of manufacturing in county earnings per county variable
dat <- dat %>%
arrange(fips, year) %>%
group_by(fips) %>%
mutate(frac_manufact = ifelse(year == 1969, Manufact / EarnPOW, NA)) %>%
fill(frac_manufact)
# A. creating coal price variable
dat$coal_price <- dat$pcoalyr / dat$pyr
# first construct log of price of coal and log difference of price of coal
dat$coal_price_log <- log(dat$coal_price)
setDT(dat)[, delta_coal_price_log := c(NA, diff(coal_price_log)), by = fips]
# construct change in value of coal reserves variable
dat$instrument <- dat$delta_coal_price_log * log(dat$coalres)
dat$instrument[dat$coalres==0] <- 0
dat <- dat %>%
group_by(fips) %>%
mutate(instrument_lag1 = lag(instrument, n = 1, default = NA),
instrument_lag2 = lag(instrument, n = 2, default = NA))
# construct lags of the variables
dat <- dat %>%
group_by(fips) %>%
mutate(delta_value_coal_lag1 = lag(delta_value_coal, n = 1, default = NA)) %>%
mutate(delta_value_coal_lag2 = lag(delta_value_coal, n = 2, default = NA))
# OLS regression with y = DI payments, no controls
di_ols_nocontrol <- lm(delta_pay_log ~ delta_EarnPOW_log + as.factor(state)*as.factor(year), data = dat)
# OLS regression with y = DI payments, yes controls
di_ols_control <- lm(delta_pay_log ~ delta_EarnPOW_log + as.factor(state)*as.factor(year) + msa + delta_Pop_log + frac_manufact, data = dat)
# OLS regression with y = SSI payments, no controls
ssi_ols_nocontrol <- lm(delta_dSSI_log ~ delta_EarnPOW_log + as.factor(state)*as.factor(year), data = dat)
# OLS regression with y = SSI payments, yes controls
ssi_ols_control <- lm(delta_dSSI_log ~ delta_EarnPOW_log + as.factor(state)*as.factor(year) + msa + delta_Pop_log + frac_manufact, data = dat)
# Heteroskedastic robust standard errors
hkse <- function(reg){robust.se(reg)[,2]}
hkse(di_ols_nocontrol)
hkse(di_ols_control)
hkse(ssi_ols_nocontrol)
hkse(ssi_ols_control)
first_stage_control <- lm(delta_EarnPOW_log ~ msa + Pop_log + delta_Pop_log + frac_manufact + instrument + instrument_lag1 + instrument_lag2 + as.factor(state)*as.factor(year), data = dat)
summary(first_stage_control)
summary(first_stage_control)
ssi.iv.control <- ivreg(delta_dSSI_log ~ delta_EarnPOW_log + msa + Pop_log + delta_Pop_log + frac_manufact + as.factor(state)*as.factor(year) | msa + Pop_log + delta_Pop_log + frac_manufact + instrument + instrument_lag1 + instrument_lag2 + as.factor(state)*as.factor(year), data = dat)
summary(ssi.iv.control)
di.iv.nocontrol <- ivreg(delta_pay_log ~ delta_EarnPOW_log + as.factor(state)*as.factor(year) | instrument + instrument_lag1 + instrument_lag2 + as.factor(state)*as.factor(year), data = dat)
di.iv.control <- ivreg(delta_pay_log ~ delta_EarnPOW_log + msa + Pop_log + delta_Pop_log + frac_manufact + as.factor(state)*as.factor(year) | msa + Pop_log + delta_Pop_log + frac_manufact + instrument + instrument_lag1 + instrument_lag2 + as.factor(state)*as.factor(year), data = dat)
ssi.iv.nocontrol <- ivreg(delta_dSSI_log ~ delta_EarnPOW_log + as.factor(state)*as.factor(year) | instrument + instrument_lag1 + instrument_lag2 + as.factor(state)*as.factor(year), data = dat)
ssi.iv.control <- ivreg(delta_dSSI_log ~ delta_EarnPOW_log + msa + Pop_log + delta_Pop_log + frac_manufact + as.factor(state)*as.factor(year) | msa + Pop_log + delta_Pop_log + frac_manufact + instrument + instrument_lag1 + instrument_lag2 + as.factor(state)*as.factor(year), data = dat)
summary(dii.iv.control)
summary(di.iv.control)
library(tidyr)
library(dplyr)
library(data.table)
library(Hmisc)
library(ivpack)
library(stargazer)
stargazer(di_ols_control, ssi_ols_control, di_ols_nocontrol, ssi_ols_nocontrol, .type="latex", title = "Results", )
stargazer(di_ols_control, ssi_ols_control, di_ols_nocontrol, ssi_ols_nocontrol, type="latex", title = "Results", )
stargazer(di_ols_control, ssi_ols_control, di_ols_nocontrol, ssi_ols_nocontrol, type="latex", title = "Results", style = style)
stargazer(di_ols_control, ssi_ols_control, di_ols_nocontrol, ssi_ols_nocontrol, type="latex", title = "Results", align=TRUE)
stargazer(di_ols_control, ssi_ols_control, di_ols_nocontrol, ssi_ols_nocontrol, summary.logical = FALSE, type="latex", title = "Results", align=TRUE)
stargazer(di_ols_control, ssi_ols_control, di_ols_nocontrol, ssi_ols_nocontrol, logical = FALSE, type="latex", title = "Results", align=TRUE)
stargazer(di_ols_control, ssi_ols_control, di_ols_nocontrol, ssi_ols_nocontrol, omit=as.factor(state)*as.factor(year), omit.labels = as.factor(state)*as.factor(year), type="latex", title = "Results", align=TRUE)
summary(di.iv.control)$coefficients[ !regexpr("as.factor*+", names(coef(di.iv.control))),, drop=FALSE]
summary(di.iv.control)$coefficients[ !regexpr("as.factor+", names(coef(di.iv.control))),, drop=FALSE]
summary(di.iv.control)$coefficients[ !regexpr("as.factor+", names(coef(di.iv.control))),, drop=FALSE]
summary(di.iv.control)$coefficients
summary(di.iv.control)$coefficients[1:5]
summary(di.iv.control)$coefficients[1:5,]
star_ols1 <- summary(di_ols_control)$coefficients[1:5,]
star_ols1 <- summary(di_ols_control)$coefficients[1:5,]
star_ols1 <- summary(di_ols_control)$coefficients[1:5,]
star_ols2 <- summary(ssi_ols_control)$coefficients[1:5,]
star_ols3 <- summary(di_ols_nocontrol)$coefficients[1:2,]
star_ols1 <- summary(di_ols_control)$coefficients[1:5,]
star_ols2 <- summary(ssi_ols_control)$coefficients[1:5,]
star_ols3 <- summary(di_ols_nocontrol)$coefficients[1:2,]
star_ols3
star_ols1 <- summary(di_ols_control)$coefficients[1:5,]
star_ols2 <- summary(ssi_ols_control)$coefficients[1:5,]
star_ols3 <- summary(di_ols_nocontrol)$coefficients[1:2,]
star_ols4 <- summary(ssi_ols_nocontrol)$coefficients[1:5,]
stargazer(star_ols1, star_ols2, star_ols3, star_ols4, type="latex", title = "Results", align=TRUE)
stargazer(star_ols1, star_ols2, star_ols3, star_ols4, type="text", title = "Results", align=TRUE)
stargazer(star_ols1, star_ols2, star_ols3, star_ols4, type="text", title = "Results", align=TRUE)
# OLS regression with y = DI payments, no controls
di_ols_nocontrol <- lm(delta_pay_log ~ delta_EarnPOW_log + as.factor(state)*as.factor(year), data = dat)
# OLS regression with y = DI payments, yes controls
di_ols_control <- lm(delta_pay_log ~ delta_EarnPOW_log + msa + Pop_log + delta_Pop_log + frac_manufact + as.factor(state)*as.factor(year), data = dat)
# OLS regression with y = SSI payments, no controls
ssi_ols_nocontrol <- lm(delta_dSSI_log ~ delta_EarnPOW_log + as.factor(state)*as.factor(year), data = dat)
# OLS regression with y = SSI payments, yes controls
ssi_ols_control <- lm(delta_dSSI_log ~ delta_EarnPOW_log + msa + delta_Pop_log + frac_manufact + as.factor(state)*as.factor(year), data = dat)
star_ols1 <- summary(di_ols_control)$coefficients[1:5,]
star_ols2 <- summary(ssi_ols_control)$coefficients[1:5,]
star_ols3 <- summary(di_ols_nocontrol)$coefficients[1:2,]
star_ols4 <- summary(ssi_ols_nocontrol)$coefficients[1:2,]
stargazer(star_ols1, star_ols2, star_ols3, star_ols4, type="text", title = "Results", align=TRUE)
star_ols1 <- summary(di_ols_control)$coefficients[1:6,]
star_ols2 <- summary(ssi_ols_control)$coefficients[1:6,]
star_ols3 <- summary(di_ols_nocontrol)$coefficients[1:2,]
star_ols4 <- summary(ssi_ols_nocontrol)$coefficients[1:2,]
stargazer(star_ols1, star_ols2, star_ols3, star_ols4, type="text", title = "Results", align=TRUE)
stargazer(star_ols1, star_ols2, star_ols3, star_ols4, type="latex", title = "Results", align=TRUE)
summary(di.iv.control)
stargazer(star_ols1, star_ols2, star_ols3, star_ols4, type="latex", title = "Results", keep = c("\\bdelta_EarnPOW_log\\b", "\\bmsa\\b", "\\bPop_log\\b", "\\bdelta_Pop_log\\b", "\\bfrac_maufact\\b"), align=TRUE)
stargazer(star_ols1, star_ols2, star_ols3, star_ols4, type="text", title = "Results", keep = c("\\bdelta_EarnPOW_log\\b", "\\bmsa\\b", "\\bPop_log\\b", "\\bdelta_Pop_log\\b", "\\bfrac_maufact\\b"), align=TRUE)
stargazer(star_ols1, star_ols2, star_ols3, star_ols4, type="html", title = "Results", keep = c("\\bdelta_EarnPOW_log\\b", "\\bmsa\\b", "\\bPop_log\\b", "\\bdelta_Pop_log\\b", "\\bfrac_maufact\\b"), align=TRUE)
stargazer(star_ols1, star_ols2, star_ols3, star_ols4, type="text", title = "Results", keep = c("\\bdelta_EarnPOW_log\\b"), align=TRUE)
stargazer(star_ols1, star_ols2, star_ols3, star_ols4, type="text", title = "Results", keep = c("\\bdelta_EarnPOW_log\\b"), align=TRUE)
stargazer(star.ols1, star.ols2, star.ols3, star.ols4, type="text", title = "Results", keep = c("\\bdelta.EarnPOW.log\\b", "\\bmsa\\b", "\\bPop.log\\b", "\\bdelta.Pop.log\\b", "\\bfrac.maufact\\b"), align=TRUE)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
library(tidyr)
library(dplyr)
library(data.table)
library(Hmisc)
library(ivpack)
library(stargazer)
create_plot <- function(MC, AC, DC, poslab){
max_y = DC(0) + 1
plot(MC, ylim=c(0, max_y), xlim = c(0, 4), xlab = "Quantity", ylab = "Price",
lwd = 3, axes = FALSE, frame = TRUE)
plot(AC, add = TRUE, xlim = c(0,4), lty = 3, lwd = 3)
plot(DC, add = TRUE, xlim = c(0,4), lty = 1, lwd = 3, col = "grey")
eqm = uniroot(function(x) AC(x) - DC(x), c(0, 100))$root
if(eqm <= 4){
peqm = AC(eqm)
} else {
peqm = AC(4)
}
abline(v = eqm, col = "red")
abline(v = 4, col = "green")
abline(h=peqm, col = "red")
Axis(side = 1, at = eqm,  labels="Qeqm", col.axis="red")
Axis(side = 1, at = 4,  labels="Qmax", col.axis="green")
Axis(side = 2, at = peqm, labels = "Peqm", col.axis="red")
legend(poslab, legend=c("MC", "AC", "Demand"), lty = c(1, 3, 1),
col = c("black", "black", "grey"))
}
MC <- function(x) -x + 5
AC <- function(x) -1/2 * x + 5
DC <- function(x) -2 * x + 10
create_plot(MC, AC, DC, "topright")
DC <- function(x)  -2 * x + 12
create_plot(MC, AC, DC, "topright")
MC <- function(x) -x + 5
AC <- function(x) -1/2 * x + 5
DC <- function(x) -3/4 * x + 5
create_plot(MC, AC, DC, "bottomleft")
MC <- function(x) x + 1
AC <- function(x)  1/2 * x + 1
DC <- function(x) -1 * x + 6
create_plot(MC, AC, DC, "topleft")
eff = uniroot(function(x) MC(x) - DC(x), c(0, 100))$root
abline(v = eff, col = "blue")
Axis(side = 1, at = eff,  labels="Qeff", col.axis="blue")
# Expected cost of insurance
0.25 * 0.1 * 10000 + 0.25 * 0.05 * 10000 + 0.25 * 0.2 * 10000 + 0.25 * 0.1 * 10000
risks = c(0.1, 0.05, 0.2, 0.1)
values_insurance = lapply(risks, function(r) r * 10000 + 400)
values_insurance
# Expected cost of insurance for smokers
0.5 * 0.1 * 10000 + 0.5 * 0.2 * 10000
# Expected cost of insurance for non-smokers
0.5 * 0.05 * 10000 + 0.5 * 0.1 * 10000
# Expected cost of insuring smokers with bad history (dollars)
0.2 * 10000
# loading in data
dat <- read.csv("DataExercise_IV/pset_iv_data.csv")
# A. constructing log variables
dat$pay.log <- log(dat$pay)
dat$dSSI.log <- log(dat$dSSI)
dat$Pop.log <- log(dat$Pop)
dat$EarnPOW.log <- log(dat$EarnPOW)
# B. constructing log differences
setDT(dat)[, delta.pay.log := c(NA, diff(pay.log)), by = fips]
setDT(dat)[, delta.dSSI.log := c(NA, diff(dSSI.log)), by = fips]
setDT(dat)[, delta.Pop.log := c(NA, diff(Pop.log)), by = fips]
setDT(dat)[, delta.EarnPOW.log := c(NA, diff(EarnPOW.log)), by = fips]
# C. creating 1968 share of manufacturing in county earnings per county variable
dat <- dat %>%
arrange(fips, year) %>%
group_by(fips) %>%
mutate(frac.manufact = ifelse(year == 1969, Manufact / EarnPOW, NA)) %>%
fill(frac.manufact)
# A. creating coal price variable
dat$coal.price <- dat$pcoalyr / dat$pyr
# first construct log of price of coal and log difference of price of coal
dat$coal.price.log <- log(dat$coal.price)
setDT(dat)[, delta.coal.price.log := c(NA, diff(coal.price.log)), by = fips]
# construct change in value of coal reserves variable
dat$instrument <- dat$delta.coal.price.log * log(dat$coalres)
dat$instrument[dat$coalres==0] <- 0
dat <- dat %>%
group_by(fips) %>%
mutate(instrument.lag1 = lag(instrument, n = 1, default = NA),
instrument.lag2 = lag(instrument, n = 2, default = NA))
# OLS regression with y = DI payments, no controls
di.ols.nocontrol <- lm(delta.pay.log ~ delta.EarnPOW.log + as.factor(state)*as.factor(year), data = dat)
# OLS regression with y = DI payments, yes controls
di.ols.control <- lm(delta.pay.log ~ delta.EarnPOW.log + msa + Pop.log + delta.Pop.log + frac.manufact + as.factor(state)*as.factor(year), data = dat)
# OLS regression with y = SSI payments, no controls
ssi.ols.nocontrol <- lm(delta.dSSI.log ~ delta.EarnPOW.log + as.factor(state)*as.factor(year), data = dat)
# OLS regression with y = SSI payments, yes controls
ssi.ols.control <- lm(delta.dSSI.log ~ delta.EarnPOW.log + msa + delta.Pop.log + frac.manufact + as.factor(state)*as.factor(year), data = dat)
# Heteroskedastic robust standard errors
hkse <- function(reg){robust.se(reg)[,2]}
hkse(di.ols.nocontrol)
hkse(di.ols.control)
hkse(ssi.ols.nocontrol)
hkse(ssi.ols.control)
first.stage.control <- lm(delta.EarnPOW.log ~ msa + Pop.log + delta.Pop.log + frac.manufact + instrument + instrument.lag1 + instrument.lag2 + as.factor(state)*as.factor(year), data = dat)
summary(first.stage.control)
di.iv.nocontrol <- ivreg(delta.pay.log ~ delta.EarnPOW.log + as.factor(state)*as.factor(year) | instrument + instrument.lag1 + instrument.lag2 + as.factor(state)*as.factor(year), data = dat)
di.iv.control <- ivreg(delta.pay.log ~ delta.EarnPOW.log + msa + Pop.log + delta.Pop.log + frac.manufact + as.factor(state)*as.factor(year) | msa + Pop.log + delta.Pop.log + frac.manufact + instrument + instrument.lag1 + instrument.lag2 + as.factor(state)*as.factor(year), data = dat)
ssi.iv.nocontrol <- ivreg(delta.dSSI.log ~ delta.EarnPOW.log + as.factor(state)*as.factor(year) | instrument + instrument.lag1 + instrument.lag2 + as.factor(state)*as.factor(year), data = dat)
ssi.iv.control <- ivreg(delta.dSSI.log ~ delta.EarnPOW.log + msa + Pop.log + delta.Pop.log + frac.manufact + as.factor(state)*as.factor(year) | msa + Pop.log + delta.Pop.log + frac.manufact + instrument + instrument.lag1 + instrument.lag2 + as.factor(state)*as.factor(year), data = dat)
summary(di.iv.control)
names(dat)
dat
star.ols1 <- summary(di.ols.control)$coefficients[1:6,]
star.ols2 <- summary(ssi.ols.control)$coefficients[1:6,]
star.ols3 <- summary(di.ols.nocontrol)$coefficients[1:2,]
star.ols4 <- summary(ssi.ols.nocontrol)$coefficients[1:2,]
stargazer(star.ols1, star.ols2, star.ols3, star.ols4, type="text", title = "Results", keep = c("\\bdelta.EarnPOW.log\\b", "\\bmsa\\b", "\\bPop.log\\b", "\\bdelta.Pop.log\\b", "\\bfrac.maufact\\b"), align=TRUE)
stargazer(star.ols1, star.ols2, star.ols3, star.ols4, type="latex", title = "Results", keep = c("\\bdelta.EarnPOW.log\\b", "\\bmsa\\b", "\\bPop.log\\b", "\\bdelta.Pop.log\\b", "\\bfrac.maufact\\b"), align=TRUE)
stargazer(star.ols1, star.ols2, star.ols3, star.ols4, type="text", title = "Results", keep = c("\\bdelta.EarnPOW.log\\b", "\\bmsa\\b", "\\bPop.log\\b", "\\bdelta.Pop.log\\b", "\\bfrac.maufact\\b"), align=TRUE)
stargazer(star.ols1, star.ols2, star.ols3, star.ols4, type="text", title = "Results", keep = c("delta.EarnPOW.log"), align=TRUE)
stargazer(star.ols1, star.ols2, star.ols3, star.ols4, type="text", title = "Results", keep = c("\\delta.EarnPOW.log\\"), align=TRUE)
stargazer(star.ols1, star.ols2, star.ols3, star.ols4, type="text", title = "Results", keep = c("delta.EarnPOW.log"), align=TRUE)
stargazer(star.ols1, star.ols2, star.ols3, star.ols4, type="text", title = "Results", keep = c("delta\\.EarnPOW\\.log"), align=TRUE)
stargazer(star.ols1, star.ols2, star.ols3, star.ols4, type="text", title = "Results", keep = c("delta\.EarnPOW\.log"), align=TRUE)
stargazer(star.ols1, star.ols2, star.ols3, star.ols4, type="text", title = "Results", keep = c("delta.EarnPOW.log"), align=TRUE)
di.iv.nocontrol <- ivreg(delta.pay.log ~ delta.EarnPOW.log + as.logical(state)*as.logical(year)) | instrument + instrument.lag1 + instrument.lag2 + as.factor(state)*as.factor(year), data = dat)
di.iv.nocontrol <- ivreg(delta.pay.log ~ delta.EarnPOW.log + as.logical(state)*as.logical(year) | instrument + instrument.lag1 + instrument.lag2 + as.factor(state)*as.factor(year), data = dat)
di.iv.control <- ivreg(delta.pay.log ~ delta.EarnPOW.log + msa + Pop.log + delta.Pop.log + frac.manufact + as.factor(state)*as.factor(year) | msa + Pop.log + delta.Pop.log + frac.manufact + instrument + instrument.lag1 + instrument.lag2 + as.factor(state)*as.factor(year), data = dat)
ssi.iv.nocontrol <- ivreg(delta.dSSI.log ~ delta.EarnPOW.log + as.factor(state)*as.factor(year) | instrument + instrument.lag1 + instrument.lag2 + as.factor(state)*as.factor(year), data = dat)
ssi.iv.control <- ivreg(delta.dSSI.log ~ delta.EarnPOW.log + msa + Pop.log + delta.Pop.log + frac.manufact + as.factor(state)*as.factor(year) | msa + Pop.log + delta.Pop.log + frac.manufact + instrument + instrument.lag1 + instrument.lag2 + as.factor(state)*as.factor(year), data = dat)
stargazer(di.iv.nocontrol, type="text", title = "Results", summary.logical = FALSE, align=TRUE)
di.iv.nocontrol <- ivreg(delta.pay.log ~ delta.EarnPOW.log + as.factor(state)*as.factor(year) | instrument + instrument.lag1 + instrument.lag2 + as.factor(state)*as.factor(year), data = dat)
di.iv.control <- ivreg(delta.pay.log ~ delta.EarnPOW.log + msa + Pop.log + delta.Pop.log + frac.manufact + as.factor(state)*as.factor(year) | msa + Pop.log + delta.Pop.log + frac.manufact + instrument + instrument.lag1 + instrument.lag2 + as.factor(state)*as.factor(year), data = dat)
ssi.iv.nocontrol <- ivreg(delta.dSSI.log ~ delta.EarnPOW.log + as.factor(state)*as.factor(year) | instrument + instrument.lag1 + instrument.lag2 + as.factor(state)*as.factor(year), data = dat)
ssi.iv.control <- ivreg(delta.dSSI.log ~ delta.EarnPOW.log + msa + Pop.log + delta.Pop.log + frac.manufact + as.factor(state)*as.factor(year) | msa + Pop.log + delta.Pop.log + frac.manufact + instrument + instrument.lag1 + instrument.lag2 + as.factor(state)*as.factor(year), data = dat)
stargazer(di.iv.nocontrol, type="text", title = "Results", summary.logical = FALSE, align=TRUE)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
library(tidyr)
library(dplyr)
library(data.table)
library(Hmisc)
library(ivpack)
library(stargazer)
create_plot <- function(MC, AC, DC, poslab){
max_y = DC(0) + 1
plot(MC, ylim=c(0, max_y), xlim = c(0, 4), xlab = "Quantity", ylab = "Price",
lwd = 3, axes = FALSE, frame = TRUE)
plot(AC, add = TRUE, xlim = c(0,4), lty = 3, lwd = 3)
plot(DC, add = TRUE, xlim = c(0,4), lty = 1, lwd = 3, col = "grey")
eqm = uniroot(function(x) AC(x) - DC(x), c(0, 100))$root
if(eqm <= 4){
peqm = AC(eqm)
} else {
peqm = AC(4)
}
abline(v = eqm, col = "red")
abline(v = 4, col = "green")
abline(h=peqm, col = "red")
Axis(side = 1, at = eqm,  labels="Qeqm", col.axis="red")
Axis(side = 1, at = 4,  labels="Qmax", col.axis="green")
Axis(side = 2, at = peqm, labels = "Peqm", col.axis="red")
legend(poslab, legend=c("MC", "AC", "Demand"), lty = c(1, 3, 1),
col = c("black", "black", "grey"))
}
MC <- function(x) -x + 5
AC <- function(x) -1/2 * x + 5
DC <- function(x) -2 * x + 10
create_plot(MC, AC, DC, "topright")
DC <- function(x)  -2 * x + 12
create_plot(MC, AC, DC, "topright")
MC <- function(x) -x + 5
AC <- function(x) -1/2 * x + 5
DC <- function(x) -3/4 * x + 5
create_plot(MC, AC, DC, "bottomleft")
MC <- function(x) x + 1
AC <- function(x)  1/2 * x + 1
DC <- function(x) -1 * x + 6
create_plot(MC, AC, DC, "topleft")
eff = uniroot(function(x) MC(x) - DC(x), c(0, 100))$root
abline(v = eff, col = "blue")
Axis(side = 1, at = eff,  labels="Qeff", col.axis="blue")
# Expected cost of insurance
0.25 * 0.1 * 10000 + 0.25 * 0.05 * 10000 + 0.25 * 0.2 * 10000 + 0.25 * 0.1 * 10000
risks = c(0.1, 0.05, 0.2, 0.1)
values_insurance = lapply(risks, function(r) r * 10000 + 400)
values_insurance
# Expected cost of insurance for smokers
0.5 * 0.1 * 10000 + 0.5 * 0.2 * 10000
# Expected cost of insurance for non-smokers
0.5 * 0.05 * 10000 + 0.5 * 0.1 * 10000
# Expected cost of insuring smokers with bad history (dollars)
0.2 * 10000
# loading in data
dat <- read.csv("DataExercise_IV/pset_iv_data.csv")
# A. constructing log variables
dat$pay.log <- log(dat$pay)
dat$dSSI.log <- log(dat$dSSI)
dat$Pop.log <- log(dat$Pop)
dat$EarnPOW.log <- log(dat$EarnPOW)
# B. constructing log differences
setDT(dat)[, delta.pay.log := c(NA, diff(pay.log)), by = fips]
setDT(dat)[, delta.dSSI.log := c(NA, diff(dSSI.log)), by = fips]
setDT(dat)[, delta.Pop.log := c(NA, diff(Pop.log)), by = fips]
setDT(dat)[, delta.EarnPOW.log := c(NA, diff(EarnPOW.log)), by = fips]
# C. creating 1968 share of manufacturing in county earnings per county variable
dat <- dat %>%
arrange(fips, year) %>%
group_by(fips) %>%
mutate(frac.manufact = ifelse(year == 1969, Manufact / EarnPOW, NA)) %>%
fill(frac.manufact)
# A. creating coal price variable
dat$coal.price <- dat$pcoalyr / dat$pyr
# first construct log of price of coal and log difference of price of coal
dat$coal.price.log <- log(dat$coal.price)
setDT(dat)[, delta.coal.price.log := c(NA, diff(coal.price.log)), by = fips]
# construct change in value of coal reserves variable
dat$instrument <- dat$delta.coal.price.log * log(dat$coalres)
dat$instrument[dat$coalres==0] <- 0
dat <- dat %>%
group_by(fips) %>%
mutate(instrument.lag1 = lag(instrument, n = 1, default = NA),
instrument.lag2 = lag(instrument, n = 2, default = NA))
# OLS regression with y = DI payments, no controls
di.ols.nocontrol <- lm(delta.pay.log ~ delta.EarnPOW.log + as.factor(state)*as.factor(year), data = dat)
# OLS regression with y = DI payments, yes controls
di.ols.control <- lm(delta.pay.log ~ delta.EarnPOW.log + msa + Pop.log + delta.Pop.log + frac.manufact + as.factor(state)*as.factor(year), data = dat)
# OLS regression with y = SSI payments, no controls
ssi.ols.nocontrol <- lm(delta.dSSI.log ~ delta.EarnPOW.log + as.factor(state)*as.factor(year), data = dat)
# OLS regression with y = SSI payments, yes controls
ssi.ols.control <- lm(delta.dSSI.log ~ delta.EarnPOW.log + msa + delta.Pop.log + frac.manufact + as.factor(state)*as.factor(year), data = dat)
# Heteroskedastic robust standard errors
hkse <- function(reg){robust.se(reg)[,2]}
hkse(di.ols.nocontrol)
hkse(di.ols.control)
hkse(ssi.ols.nocontrol)
hkse(ssi.ols.control)
first.stage.control <- lm(delta.EarnPOW.log ~ msa + Pop.log + delta.Pop.log + frac.manufact + instrument + instrument.lag1 + instrument.lag2 + as.factor(state)*as.factor(year), data = dat)
summary(first.stage.control)
di.iv.nocontrol <- ivreg(delta.pay.log ~ delta.EarnPOW.log + as.factor(state)*as.factor(year) | instrument + instrument.lag1 + instrument.lag2 + as.factor(state)*as.factor(year), data = dat)
di.iv.control <- ivreg(delta.pay.log ~ delta.EarnPOW.log + msa + Pop.log + delta.Pop.log + frac.manufact + as.factor(state)*as.factor(year) | msa + Pop.log + delta.Pop.log + frac.manufact + instrument + instrument.lag1 + instrument.lag2 + as.factor(state)*as.factor(year), data = dat)
ssi.iv.nocontrol <- ivreg(delta.dSSI.log ~ delta.EarnPOW.log + as.factor(state)*as.factor(year) | instrument + instrument.lag1 + instrument.lag2 + as.factor(state)*as.factor(year), data = dat)
ssi.iv.control <- ivreg(delta.dSSI.log ~ delta.EarnPOW.log + msa + Pop.log + delta.Pop.log + frac.manufact + as.factor(state)*as.factor(year) | msa + Pop.log + delta.Pop.log + frac.manufact + instrument + instrument.lag1 + instrument.lag2 + as.factor(state)*as.factor(year), data = dat)
summary(di.iv.control)
names(dat)
dat
star.ols1 <- summary(di.ols.control)$coefficients[1:6,]
star.ols2 <- summary(ssi.ols.control)$coefficients[1:6,]
star.ols3 <- summary(di.ols.nocontrol)$coefficients[1:2,]
star.ols4 <- summary(ssi.ols.nocontrol)$coefficients[1:2,]
star.ols1$coefficients <- star.ols1$coefficients[names(star_ols1$coefficients) %in% c("delta.EarnPOW.log", "msa", "Pop.log", "delta.Pop.log", "frac.maufact")]
star.ols1$coefficients <- star.ols1$coefficients[names(star.ols1$coefficients) %in% c("delta.EarnPOW.log", "msa", "Pop.log", "delta.Pop.log", "frac.maufact")]
star.ols1 <- summary(di.ols.control)$coefficients[1:6,]
star.ols2 <- summary(ssi.ols.control)$coefficients[1:6,]
star.ols3 <- summary(di.ols.nocontrol)$coefficients[1:2,]
star.ols4 <- summary(ssi.ols.nocontrol)$coefficients[1:2,]
di.ols.control$coefficients <- di.ols.control$coefficients[names(di.ols.control$coefficients) %in% c("delta.EarnPOW.log", "msa", "Pop.log", "delta.Pop.log", "frac.maufact")]
di.ols.control$coefficients <- di.ols.control$coefficients[names(di.ols.control$coefficients) %in% c("delta.EarnPOW.log", "msa", "Pop.log", "delta.Pop.log", "frac.maufact")]
summary(di.ols.control)
# OLS regression with y = DI payments, no controls
di.ols.nocontrol <- lm(delta.pay.log ~ delta.EarnPOW.log + as.factor(state)*as.factor(year), data = dat)
# OLS regression with y = DI payments, yes controls
di.ols.control <- lm(delta.pay.log ~ delta.EarnPOW.log + msa + Pop.log + delta.Pop.log + frac.manufact + as.factor(state)*as.factor(year), data = dat)
# OLS regression with y = SSI payments, no controls
ssi.ols.nocontrol <- lm(delta.dSSI.log ~ delta.EarnPOW.log + as.factor(state)*as.factor(year), data = dat)
# OLS regression with y = SSI payments, yes controls
ssi.ols.control <- lm(delta.dSSI.log ~ delta.EarnPOW.log + msa + delta.Pop.log + frac.manufact + as.factor(state)*as.factor(year), data = dat)
di.ols.control$coefficients <- di.ols.control$coefficients[names(di.ols.control$coefficients) %in% c("delta.EarnPOW.log", "msa", "Pop.log", "delta.Pop.log", "frac.manufact")]
summary(di.ols.control)
di.ols.control$coefficients <- di.ols.control$coefficients[names(di.ols.control$coefficients) %in% c("delta.EarnPOW.log", "msa", "Pop.log", "delta.Pop.log", "frac.manufact")]
summary(di.ols.control)
stargazer(di.ols.control, type="text", title = "Results", align=TRUE)
di.ols.control$coefficients <- di.ols.control$coefficients[names(di.ols.control$coefficients) %in% c("delta.EarnPOW.log", "msa", "Pop.log", "delta.Pop.log", "frac.manufact")]
summary(di.ols.control)
stargazer(di.ols.control, type="text", title = "Results", omit = "NA", omit.labels = "NA", align=TRUE)
di.ols.control$coefficients <- di.ols.control$coefficients[names(di.ols.control$coefficients) %in% c("delta.EarnPOW.log", "msa", "Pop.log", "delta.Pop.log", "frac.manufact")]
summary(di.ols.control)
stargazer(di.ols.control, type="text", title = "Results", omit = c("NA"), omit.labels = c("NA"), align=TRUE)
# OLS regression with y = DI payments, no controls
di.ols.nocontrol <- lm(delta.pay.log ~ delta.EarnPOW.log + as.factor(state)*as.factor(year), data = dat)
# OLS regression with y = DI payments, yes controls
di.ols.control <- lm(delta.pay.log ~ delta.EarnPOW.log + msa + Pop.log + delta.Pop.log + frac.manufact + as.factor(state)*as.factor(year), data = dat)
# OLS regression with y = SSI payments, no controls
ssi.ols.nocontrol <- lm(delta.dSSI.log ~ delta.EarnPOW.log + as.factor(state)*as.factor(year), data = dat)
# OLS regression with y = SSI payments, yes controls
ssi.ols.control <- lm(delta.dSSI.log ~ delta.EarnPOW.log + msa + delta.Pop.log + frac.manufact + as.factor(state)*as.factor(year), data = dat)
stargazer(di.ols.control, type="text", title = "Results", omit = "as", omit.labels = "as", align=TRUE)
stargazer(di.ols.control, type="text", title = "Results", omit = "as", omit.labels = "as.factor", align=TRUE)
stargazer(di.ols.control, type="text", title = "Results", omit = "as", omit.labels = "state-by-year dummies", align=TRUE)
stargazer(di.ols.control, ssi.ols.control, di.ols.nocontrol, ssi.ols.nocontrol, type="text", title = "Results", omit = "as", omit.labels = "state-by-year dummies", align=TRUE)
stargazer(di.ols.control, ssi.ols.control, di.ols.nocontrol, ssi.ols.nocontrol, type="text", title = "OLS Results", omit = "as", omit.labels = "state-by-year dummies", align=TRUE)
stargazer(di.iv.control, ssi.iv.control, di.iv.nocontrol, ssi.iv.nocontrol, type="latex", title = "2SLS Results", omit = "as", omit.labels = "state-by-year dummies", align=TRUE)
stargazer(di.ols.control, ssi.ols.control, di.ols.nocontrol, ssi.ols.nocontrol,
type="latex", title = "OLS Results", omit = "as", omit.labels = "state-by-year dummies",
header = FALSE, no.space=TRUE, column.sep.width = "3pt", font.size = "small", align=TRUE)
stargazer(di.iv.control, ssi.iv.control, di.iv.nocontrol, ssi.iv.nocontrol, type="latex",
title = "2SLS Results", omit = "as", omit.labels = "state-by-year dummies",
header = FALSE, no.space=TRUE, column.sep.width = "3pt", font.size = "small", align=TRUE)
stargazer(first.stage.control, type="latex", title = "First Stage Results", omit = "as",
omit.labels = "state-by-year dummies", header = FALSE, no.space=TRUE,
column.sep.width = "3pt", font.size = "small", align=TRUE)
stargazer(di.ols.control, ssi.ols.control, di.ols.nocontrol, ssi.ols.nocontrol,
type="latex", title = "OLS Results", omit = "as",
se = list(ols1_error, ols2_error, ols3_error, ols4_error),
omit.labels = "state-by-year dummies", header = FALSE, no.space=TRUE,
column.sep.width = "3pt", font.size = "small", align=TRUE,
float.env = "sidewaystable")
# Heteroskedastic robust standard errors
hkse <- function(reg){robust.se(reg)[,2]}
ols1_error <- hkse(di.ols.control)
ols2_error <- hkse(ssi.ols.control)
ols3_error <- hkse(di.ols.nocontrol)
ols4_error <- hkse(ssi.ols.nocontrol)
stargazer(di.ols.control, ssi.ols.control, di.ols.nocontrol, ssi.ols.nocontrol,
type="latex", title = "OLS Results", omit = "as",
se = list(ols1_error, ols2_error, ols3_error, ols4_error),
omit.labels = "state-by-year dummies", header = FALSE, no.space=TRUE,
column.sep.width = "3pt", font.size = "small", align=TRUE,
float.env = "sidewaystable")
stargazer(di.iv.control, ssi.iv.control, di.iv.nocontrol, ssi.iv.nocontrol,
type="latex", title = "2SLS Results", omit = "as",
se = list(iv1_error, iv2_error, iv3_error, iv4_error),
omit.labels = "state-by-year dummies",
header = FALSE, no.space=TRUE, column.sep.width = "3pt",
font.size = "small", align=TRUE)
# heteroskedastic robust errors
iv1_error <- hkse(di.iv.control)
iv2_error <- hkse(ssi.iv.control)
iv3_error <- hkse(di.iv.nocontrol)
iv4_error <- hkse(ssi.iv.nocontrol)
stargazer(di.iv.control, ssi.iv.control, di.iv.nocontrol, ssi.iv.nocontrol,
type="latex", title = "2SLS Results", omit = "as",
se = list(iv1_error, iv2_error, iv3_error, iv4_error),
omit.labels = "state-by-year dummies",
header = FALSE, no.space=TRUE, column.sep.width = "3pt",
font.size = "small", align=TRUE)
stargazer(first.stage.control, type="latex", title = "First Stage Results",
omit = "as", omit.labels = "state-by-year dummies", header = FALSE, single.row=TRUE
no.space=TRUE, column.sep.width = "3pt", font.size = "small", align=TRUE)
stargazer(first.stage.control, type="latex", title = "First Stage Results",
omit = "as", omit.labels = "state-by-year dummies", header = FALSE, single.row=TRUE,
no.space=TRUE, column.sep.width = "3pt", font.size = "small", align=TRUE)
